# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Apr 11 13:25:55 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))